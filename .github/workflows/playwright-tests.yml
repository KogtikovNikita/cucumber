name: Playwright Tests

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js (Optional if not using Playwright for JS)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Step 3: Set Up JDK 21
      - name: Set Up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Step 4: Install Maven 3.9.9
      - name: Setup Maven
        uses: s4u/setup-maven-action@v1.7.0
        with:
          checkout-fetch-depth: 0
          java-version: 21
          java-distribution: temurin
          maven-version: 3.9.9

      # âœ… Step 5: Install required OS libraries for Playwright (Java)
      - name: Install Playwright browser dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwoff1 \
            libvpx9 \
            libevent-2.1-7 \
            libopus0 \
            libgstreamer-plugins-base1.0-0 \
            libgstreamer-gl1.0-0 \
            libgstreamer-plugins-bad1.0-0 \
            libharfbuzz-icu0 \
            libsecret-1-0 \
            libhyphen0 \
            libmanette-0.2-0 \
            libflite1 \
            libgles2 \
            gstreamer1.0-libav

      # Step 6: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      # Step 7: Run Playwright Tests using Maven
      - name: Run Playwright Tests
        run: mvn verify

      # Step 8: Archive trace files (if generated)
      - name: Archive trace files
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: traces
          path: target/traces/*.zip

      # Step 9: Deploy Allure report to GitHub Pages
      - name: Deploy Allure Report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: target/site/allure-maven-plugin